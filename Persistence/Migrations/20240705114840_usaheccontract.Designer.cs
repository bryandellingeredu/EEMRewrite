// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240705114840_usaheccontract")]
    partial class usaheccontract
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionOfficerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ActivityAttachmentGroupLookup")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalVTCInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllDayEvent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AmbassadorEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AmbassadorRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("AmbassadorRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AmbassadorStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedByOPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmyTeamLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AttachmentLookup")
                        .HasColumnType("int");

                    b.Property<string>("AutomationComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AutomationCopiers")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomationPC")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomationProjection")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomationTaping")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomationVTC")
                        .HasColumnType("bit");

                    b.Property<bool>("BlissHallAVNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("BlissHallAVSptRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BlissHallSupport")
                        .HasColumnType("bit");

                    b.Property<bool>("CCRNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("CSLDirectorateCSL")
                        .HasColumnType("bit");

                    b.Property<bool>("CSLDirectorateDSW")
                        .HasColumnType("bit");

                    b.Property<bool>("CSLDirectorateDTI")
                        .HasColumnType("bit");

                    b.Property<bool>("CSLDirectorateFellows")
                        .HasColumnType("bit");

                    b.Property<bool>("CSLDirectorateOPS")
                        .HasColumnType("bit");

                    b.Property<bool>("CSLDirectorateSLFG")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CSMEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CSMRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("CSMRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CSMStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CancelledAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancelledBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelledReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Catering")
                        .HasColumnType("bit");

                    b.Property<bool>("CateringArea18")
                        .HasColumnType("bit");

                    b.Property<bool>("CateringArea22")
                        .HasColumnType("bit");

                    b.Property<bool>("CateringAreaArdennes")
                        .HasColumnType("bit");

                    b.Property<bool>("CateringBreakArea18")
                        .HasColumnType("bit");

                    b.Property<bool>("CateringBreakArea22")
                        .HasColumnType("bit");

                    b.Property<string>("CateringComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CheckedForOpsec")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CofsEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CofsRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("CofsRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CofsStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommandantEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CommandantRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("CommandantRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CommandantStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommunicationComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommunicationSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CommunityEvent")
                        .HasColumnType("bit");

                    b.Property<string>("CoordinatorDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordinatorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CopiedToacademic")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedToasep")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTobattlerhythm")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocio")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocommandGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocommunity")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocsl")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTogarrison")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTogeneralInterest")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedToholiday")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTointernationalfellows")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTopksoi")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTosocialEventsAndCeremonies")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTospouse")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTossiAndUsawcPress")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTossl")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTostaff")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTostudentCalendar")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTosymposiumAndConferences")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTotrainingAndMiscEvents")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTousahec")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTousahecFacilitiesUsage")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTovisitsAndTours")
                        .HasColumnType("bit");

                    b.Property<bool>("CopyToUSAHECCalendar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DTI")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeanEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeanRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("DeanRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeanStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DialInNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistantTechPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DptCmdtEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DptCmdtRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("DptCmdtRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DptCmdtStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Education")
                        .HasColumnType("bit");

                    b.Property<string>("EducationalCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EnlistedAideAcknowledged")
                        .HasColumnType("bit");

                    b.Property<string>("EnlistedAideAdditionalRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideAlcohol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideCooking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideDietaryRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnlistedAideEvent")
                        .HasColumnType("bit");

                    b.Property<string>("EnlistedAideFundingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideGuestCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideNumOfBartenders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideNumOfServers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnlistedAideSetup")
                        .HasColumnType("bit");

                    b.Property<string>("EnlistedAideSupportNeeded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnlistedAideVenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventClearanceLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventClearanceLevelNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("EventLookup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventLookupCalendar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningCIORequirementsComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventPlanningCellPhones")
                        .HasColumnType("bit");

                    b.Property<string>("EventPlanningClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningExternalEventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningExternalEventPOCContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningExternalEventPOCEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningExternalEventPOCName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventPlanningGovLaptops")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNetworkNIPR")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNetworkNTG")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNetworkNTS")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNetworkREN")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNetworkSIPR")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNetworkWireless")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningNotifyPOC")
                        .HasColumnType("bit");

                    b.Property<string>("EventPlanningNumOfBYADS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningNumOfMonitors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningNumOfPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningNumOfPeripherals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningNumOfPrinters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningNumOfVOIPs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlanningPAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventPlanningPersonalLaptops")
                        .HasColumnType("bit");

                    b.Property<bool>("EventPlanningServers")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EventPlanningSetUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventPlanningStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventPlanningTablets")
                        .HasColumnType("bit");

                    b.Property<string>("FaxClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("G5Calendar")
                        .HasColumnType("bit");

                    b.Property<string>("G5Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GOSESInAttendance")
                        .HasColumnType("bit");

                    b.Property<string>("GarrisonCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hyperlink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HyperlinkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IMC")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LogicalDeleteInd")
                        .HasColumnType("bit");

                    b.Property<bool>("MFP")
                        .HasColumnType("bit");

                    b.Property<string>("MarketingCampaignCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MarketingRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("NewEnlistedAideEventToAideNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("NewEnlistedAideEventToESDNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("NumberAttending")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OtherComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParkingPasses")
                        .HasColumnType("bit");

                    b.Property<string>("ParkingSpaces")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParticipationCmdt")
                        .HasColumnType("bit");

                    b.Property<bool>("ParticipationDir")
                        .HasColumnType("bit");

                    b.Property<bool>("ParticipationForeign")
                        .HasColumnType("bit");

                    b.Property<bool>("ParticipationGO")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumberForRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PocketCalLessonNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PocketCalNonAcademicEvent")
                        .HasColumnType("bit");

                    b.Property<string>("PocketCalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PocketCalPresenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PocketCalPresenterOrg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PocketCalWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProvostEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ProvostRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("ProvostRequestedNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProvostStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RecurrenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("RecurrenceInd")
                        .HasColumnType("bit");

                    b.Property<bool>("Registration")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestorPOCContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoomRequirement1")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomRequirement2")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomRequirement3")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomRequirementBasement")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceNipr")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceNotApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceNtg")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceNts")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceOther")
                        .HasColumnType("bit");

                    b.Property<string>("RoomResourceOtherText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoomResourceRen")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomResourceSipr")
                        .HasColumnType("bit");

                    b.Property<string>("RoomSetUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomSetUpInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSLCategories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SecurityAfterDutyAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("SecurityBadgeIssue")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendEnlistedAideConfirmationNotification")
                        .HasColumnType("bit");

                    b.Property<string>("SeniorAttendeeNameRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteIDDistantEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<bool>("StudentCalendarDistanceGroup1")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentCalendarDistanceGroup1Mandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentCalendarDistanceGroup2")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentCalendarDistanceGroup2Mandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentCalendarDistanceGroup3")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentCalendarDistanceGroup3Mandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentCalendarMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("StudentCalendarNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentCalendarPresenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StudentCalendarResident")
                        .HasColumnType("bit");

                    b.Property<string>("StudentCalendarUniform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppliesComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SymposiumLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SymposiumLinkInd")
                        .HasColumnType("bit");

                    b.Property<string>("TeamLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamLookup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamRequester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transportation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransportationComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USAHECCalendarCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USAHECContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USAHECDirectorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USAHECFacilityReservationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VTC")
                        .HasColumnType("bit");

                    b.Property<string>("VTCClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VTCConfirmedConfirmationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("VTCCoordinatorNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("VTCLookup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VTCStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RecurrenceId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Domain.ActivityAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityAttachmentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityAttachments");
                });

            modelBuilder.Entity("Domain.ActivityNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityNotifications");
                });

            modelBuilder.Entity("Domain.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Domain.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Domain.CSLCalendarLegend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CSLCalendarLegends");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IMCColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludeInIMC")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.EmailGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailGroups");
                });

            modelBuilder.Entity("Domain.EmailGroupEmailGroupMemberJunction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmailGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmailGroupMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmailGroupId");

                    b.HasIndex("EmailGroupMemberId");

                    b.ToTable("EmailGroupEmailGroupMemberJunctions");
                });

            modelBuilder.Entity("Domain.EmailGroupMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailGroupMembers");
                });

            modelBuilder.Entity("Domain.EnlistedAideCheckList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlcoholEstimate")
                        .HasColumnType("bit");

                    b.Property<bool>("CleanCutlery")
                        .HasColumnType("bit");

                    b.Property<bool>("CleanPlates")
                        .HasColumnType("bit");

                    b.Property<bool>("CleanServiceItems")
                        .HasColumnType("bit");

                    b.Property<bool>("Coffee")
                        .HasColumnType("bit");

                    b.Property<bool>("Cook")
                        .HasColumnType("bit");

                    b.Property<bool>("Dust")
                        .HasColumnType("bit");

                    b.Property<bool>("FoodPrep")
                        .HasColumnType("bit");

                    b.Property<bool>("FoodShopping")
                        .HasColumnType("bit");

                    b.Property<bool>("GFEBS")
                        .HasColumnType("bit");

                    b.Property<bool>("GatherIce")
                        .HasColumnType("bit");

                    b.Property<bool>("HighTopsAndTables")
                        .HasColumnType("bit");

                    b.Property<bool>("IceBeverages")
                        .HasColumnType("bit");

                    b.Property<bool>("MenuReviewedByPrincipal")
                        .HasColumnType("bit");

                    b.Property<bool>("NapkinsPressed")
                        .HasColumnType("bit");

                    b.Property<bool>("NapkinsRolled")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderAlcohol")
                        .HasColumnType("bit");

                    b.Property<bool>("PolishSilver")
                        .HasColumnType("bit");

                    b.Property<bool>("Prepare4843GuestList")
                        .HasColumnType("bit");

                    b.Property<bool>("PrepareGuestList")
                        .HasColumnType("bit");

                    b.Property<bool>("PrepareLegalReview")
                        .HasColumnType("bit");

                    b.Property<bool>("PrepareMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("PreparePRAForm")
                        .HasColumnType("bit");

                    b.Property<bool>("SendToLegalForApproval")
                        .HasColumnType("bit");

                    b.Property<bool>("Sterno")
                        .HasColumnType("bit");

                    b.Property<bool>("SweepAndMop")
                        .HasColumnType("bit");

                    b.Property<bool>("TentSetUp")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("EnlistedAideCheckLists");
                });

            modelBuilder.Entity("Domain.HostingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AVSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalForeignGuestInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<string>("BioAttachedOrPending")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BioIsPendingNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("ClassificationOfInformationReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfGuest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<string>("DietaryRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscortOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscortOfficerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FlagBliss")
                        .HasColumnType("bit");

                    b.Property<string>("FlagDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagIsFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FlagLectureEast")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagLectureWest")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagRoomOther")
                        .HasColumnType("bit");

                    b.Property<string>("FlagRoomOtherText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FlagSetUp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagSupport")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagSupportNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("FlagType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ForeignVisitor")
                        .HasColumnType("bit");

                    b.Property<bool>("ForeignVisitorNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("GenerateItinerary")
                        .HasColumnType("bit");

                    b.Property<string>("Gift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestItinerary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestOfficePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HostedLocationAHEC")
                        .HasColumnType("bit");

                    b.Property<bool>("HostedLocationCCR")
                        .HasColumnType("bit");

                    b.Property<bool>("HostedLocationCollinsHall")
                        .HasColumnType("bit");

                    b.Property<bool>("HostedLocationRootHall")
                        .HasColumnType("bit");

                    b.Property<bool>("HostedLocationWWA")
                        .HasColumnType("bit");

                    b.Property<bool>("HostingReportApprovalNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("HostingReportLocalTransportationNotificationSent")
                        .HasColumnType("bit");

                    b.Property<bool>("HostingReportNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("HostingReportStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalTransportationNeeded")
                        .HasColumnType("bit");

                    b.Property<bool>("LodgingArrangements")
                        .HasColumnType("bit");

                    b.Property<string>("LodgingLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MealRequestBreakfast")
                        .HasColumnType("bit");

                    b.Property<bool>("MealRequestDinner")
                        .HasColumnType("bit");

                    b.Property<bool>("MealRequestLunch")
                        .HasColumnType("bit");

                    b.Property<bool>("MealRequestOther")
                        .HasColumnType("bit");

                    b.Property<string>("ModeOfTravel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OfficeCallWithCommandant")
                        .HasColumnType("bit");

                    b.Property<bool>("OfficeCallWithCommandantNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("OutsiderReportDV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsiderReportDirectorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsiderReportEngagement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsiderReportNumOfPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsiderReportPOC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsiderReportStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsiderReportUSAWCGraduate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParkingRequirements")
                        .HasColumnType("bit");

                    b.Property<bool>("ParkingRequirementsNotificationSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PhotographSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurposeOfVisit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelArrangementDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelPartyAccomaniedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfVisit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniformOfGuest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ViosSupportAV")
                        .HasColumnType("bit");

                    b.Property<bool>("ViosSupportPhotography")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId")
                        .IsUnique();

                    b.ToTable("HostingReports");
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Domain.Recurrence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DayOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysRepeating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeWeekends")
                        .HasColumnType("bit");

                    b.Property<string>("Interval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntervalEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IntervalStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<string>("MonthlyDayType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyRepeatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthsRepeating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.Property<string>("WeekInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekdayOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekendsIncluded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeklyRepeatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeksRepeating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recurrences");
                });

            modelBuilder.Entity("Domain.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(225)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Domain.RoomDelegate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DelegateDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelegateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomDelegates");
                });

            modelBuilder.Entity("Domain.RoomReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvailabilityView")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScheduleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomReports");
                });

            modelBuilder.Entity("Domain.RoomVTCCoordinator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VTCCoordinatorDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VTCCoordinatorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomVTCCoordinators");
                });

            modelBuilder.Entity("Domain.SyncCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SyncCalendars");
                });

            modelBuilder.Entity("Domain.SyncToCalendarNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CommunityEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedToacademic")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedToasep")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTobattlerhythm")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocio")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocommandGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocommunity")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTocsl")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTogarrison")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTogeneralInterest")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedToholiday")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTointernationalfellows")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTopksoi")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTosocialEventsAndCeremonies")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTospouse")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTossiAndUsawcPress")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTossl")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTostaff")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTostudentCalendar")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTosymposiumAndConferences")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTotrainingAndMiscEvents")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTousahec")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTousahecFacilitiesUsage")
                        .HasColumnType("bit");

                    b.Property<bool>("CopiedTovisitsAndTours")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IMC")
                        .HasColumnType("bit");

                    b.Property<bool>("MFP")
                        .HasColumnType("bit");

                    b.Property<string>("StudentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SyncToCalendarNotifications");
                });

            modelBuilder.Entity("Domain.USAHECFacilitiesUsageLegend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("USAHECFacilitiesUsageLegends");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(225)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(112)
                        .HasColumnType("nvarchar(112)");

                    b.Property<string>("Name")
                        .HasMaxLength(112)
                        .HasColumnType("nvarchar(112)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Activity", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany("Activities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Organization", "Organization")
                        .WithMany("Activities")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Domain.Recurrence", "Recurrence")
                        .WithMany("Activities")
                        .HasForeignKey("RecurrenceId");

                    b.Navigation("Category");

                    b.Navigation("Organization");

                    b.Navigation("Recurrence");
                });

            modelBuilder.Entity("Domain.EmailGroupEmailGroupMemberJunction", b =>
                {
                    b.HasOne("Domain.EmailGroup", "EmailGroup")
                        .WithMany("EmailGroupMembers")
                        .HasForeignKey("EmailGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.EmailGroupMember", "EmailGroupMember")
                        .WithMany("EmailGroups")
                        .HasForeignKey("EmailGroupMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailGroup");

                    b.Navigation("EmailGroupMember");
                });

            modelBuilder.Entity("Domain.EnlistedAideCheckList", b =>
                {
                    b.HasOne("Domain.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Domain.HostingReport", b =>
                {
                    b.HasOne("Domain.Activity", "Activity")
                        .WithOne("HostingReport")
                        .HasForeignKey("Domain.HostingReport", "ActivityId");

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Domain.RefreshToken", b =>
                {
                    b.HasOne("Domain.AppUser", "AppUser")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Activity", b =>
                {
                    b.Navigation("HostingReport");
                });

            modelBuilder.Entity("Domain.AppUser", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Domain.EmailGroup", b =>
                {
                    b.Navigation("EmailGroupMembers");
                });

            modelBuilder.Entity("Domain.EmailGroupMember", b =>
                {
                    b.Navigation("EmailGroups");
                });

            modelBuilder.Entity("Domain.Organization", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Domain.Recurrence", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
